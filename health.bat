@echo off
REM Health Check Script for Windows
REM This script performs a comprehensive health check

echo üè• Shift Scheduler Health Check...
echo ==================================
echo.

REM Check if we're in the right directory
if not exist "package.json" (
    echo ‚ùå Error: Please run this script from the shift-scheduler directory
    echo    Current directory: %CD%
    echo    Expected: shift-scheduler/
    pause
    exit /b 1
)

echo üìÅ Current directory: %CD%
echo.

REM Health check results
set FRONTEND_HEALTH=0
set BACKEND_HEALTH=0
set DATABASE_HEALTH=0
set DOCKER_HEALTH=0
set OVERALL_HEALTH=0

REM Check Frontend
echo üåê Checking Frontend...
curl -f http://localhost:3000 >nul 2>&1
if %errorlevel% equ 0 (
    echo ‚úÖ Frontend: Healthy
    set FRONTEND_HEALTH=1
) else (
    echo ‚ùå Frontend: Unhealthy
)

REM Check Backend
echo üîß Checking Backend...
curl -f http://localhost:5000/api/health >nul 2>&1
if %errorlevel% equ 0 (
    echo ‚úÖ Backend: Healthy
    set BACKEND_HEALTH=1
) else (
    echo ‚ùå Backend: Unhealthy
)

REM Check Database
echo üóÑÔ∏è  Checking Database...
netstat -an | findstr :5432 >nul 2>&1
if %errorlevel% equ 0 (
    echo ‚úÖ Database: Healthy
    set DATABASE_HEALTH=1
) else (
    echo ‚ùå Database: Unhealthy
)

REM Check Docker
echo üê≥ Checking Docker...
docker --version >nul 2>&1
if %errorlevel% equ 0 (
    docker info >nul 2>&1
    if %errorlevel% equ 0 (
        echo ‚úÖ Docker: Healthy
        set DOCKER_HEALTH=1
    ) else (
        echo ‚ùå Docker: Unhealthy
    )
) else (
    echo ‚ùå Docker: Unhealthy
)

echo.

REM Calculate overall health
set /a TOTAL_CHECKS=4
set /a HEALTHY_CHECKS=%FRONTEND_HEALTH%+%BACKEND_HEALTH%+%DATABASE_HEALTH%+%DOCKER_HEALTH%
set /a HEALTH_PERCENTAGE=%HEALTHY_CHECKS%*100/%TOTAL_CHECKS%

echo üìä Health Summary:
echo ==================
if %FRONTEND_HEALTH% equ 1 (
    echo    Frontend: ‚úÖ Healthy
) else (
    echo    Frontend: ‚ùå Unhealthy
)

if %BACKEND_HEALTH% equ 1 (
    echo    Backend: ‚úÖ Healthy
) else (
    echo    Backend: ‚ùå Unhealthy
)

if %DATABASE_HEALTH% equ 1 (
    echo    Database: ‚úÖ Healthy
) else (
    echo    Database: ‚ùå Unhealthy
)

if %DOCKER_HEALTH% equ 1 (
    echo    Docker: ‚úÖ Healthy
) else (
    echo    Docker: ‚ùå Unhealthy
)

echo.
echo üè• Overall Health: %HEALTH_PERCENTAGE%% (%HEALTHY_CHECKS%/%TOTAL_CHECKS% services healthy)

REM Determine health status
if %HEALTH_PERCENTAGE% equ 100 (
    echo üéâ All services are healthy!
    set OVERALL_HEALTH=1
) else if %HEALTH_PERCENTAGE% geq 75 (
    echo ‚ö†Ô∏è  Most services are healthy, but some issues detected
) else if %HEALTH_PERCENTAGE% geq 50 (
    echo ‚ö†Ô∏è  Some services are healthy, but significant issues detected
) else (
    echo ‚ùå Critical issues detected, immediate attention required
)

echo.

REM Recommendations
echo üîß Recommendations:
echo ===================

if %FRONTEND_HEALTH% equ 0 (
    echo    ‚Ä¢ Start frontend: npm run dev
)

if %BACKEND_HEALTH% equ 0 (
    echo    ‚Ä¢ Start backend: cd backend && npm run dev
)

if %DATABASE_HEALTH% equ 0 (
    echo    ‚Ä¢ Start PostgreSQL service
    echo    ‚Ä¢ Check database connection settings
)

if %DOCKER_HEALTH% equ 0 (
    echo    ‚Ä¢ Start Docker service
    echo    ‚Ä¢ Check Docker installation
)

if %OVERALL_HEALTH% equ 1 (
    echo    ‚Ä¢ All services are running properly
    echo    ‚Ä¢ No immediate action required
)

echo.

REM Quick fixes
echo üöÄ Quick Fixes:
echo ===============
echo    ‚Ä¢ Start all services: start-all.bat
echo    ‚Ä¢ Start with Docker: start-docker.bat
echo    ‚Ä¢ Check status: status.bat
echo    ‚Ä¢ View logs: logs.bat
echo    ‚Ä¢ Monitor: monitor.bat
echo.

REM Exit with appropriate code
if %OVERALL_HEALTH% equ 1 (
    exit /b 0
) else (
    exit /b 1
)